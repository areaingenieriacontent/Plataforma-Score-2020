@using SCORM1.Models.Survey;
@using SCORM1.Models.ViewModel;
@using SCORM1.Enum;
@model SurveyViewModel
@{
    ViewBag.Title = "Survey";
}

<h2>Encuesta</h2>
<script type="text/javascript">

    function countdown() {
        minutes = document.getElementById("timerLabelMinutes").innerHTML;
        seconds = document.getElementById("timerLabelSeconds").innerHTML;
        if (seconds > 0) {
            document.getElementById("timerLabelSeconds").innerHTML = seconds - 1;
            setTimeout("countdown()", 1000);
        } else {
            document.getElementById("timerLabelMinutes").innerHTML = minutes - 1;
            if (minutes > 0) {
                document.getElementById("timerLabelSeconds").innerHTML = 59;
            } else {
                $.ajax({
                    url: 'https://aprendeyavanza2.com.co/bureaulatam/Home/Index',
                    data: { id: id }
                }).done(function () {
                    alert('Tiempo agotado');
                });
            }
            setTimeout("countdown()", 1000);
        }
    }
    setTimeout("countdown()", 1000);
</script>
@Html.HiddenFor(model => model.validSession)
@if (Model.validSession)
{
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <div class="row fecha">
        <div class="btn-group btn-breadcrumb">
            <a href="@Url.Action("Index", "Home")" class="btn btn-info"><i class="glyphicon glyphicon-home"></i></a>
            <a href="@Url.Action("Grades", "User", new { id = Model.survey.Module.Modu_Id })" class="btn btn-info">CURSO</a>
        </div>
    </div>
    <br />
    <br />
    <div class="card-body">
        <p>Tiempo restante <span id="timerLabelMinutes" runat="server">@Model.minutes</span>:<span id="timerLabelSeconds" runat="server">0</span></p>
    </div>

    using (Html.BeginForm("SurveyResponse", "Survey", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
    {

        <div class="panel panel-primary">
            <div class="panel-heading panel-head"><h1 style="font-size:35px;"> @Html.Raw(Model.survey.survey_name) </h1> </div>
            <div class="panel-body">
                @Html.HiddenFor(model => model.survey.survey_id)
                @Html.HiddenFor(model => model.enro_id)
                @Html.AntiForgeryToken()
                <div class="contenido-articulo">
                    <br /><br />
                    <p>@Html.Raw(Model.survey.survey_instructions)</p>
                </div>
            </div>
            <br /><br />
            @if (Model.multipleOptionQuestions.Count > 0)
            {
                for (int cont = 0; cont < Model.multipleOptionQuestions.Count; cont++)
                {
                    <div class="panel panel-primary">
                        <div class="panel-heading panel-head"><h1 style="font-size:35px;">Pregunta Opción Múltiple</h1> </div>
                        <div class="panel-body">
                            @Html.HiddenFor(model => model.multipleOptionQuestions[cont].question.mosq_id)
                            <div class="card-body">
                                <br />
                                <p><strong>Pregunta: @Model.multipleOptionQuestions[cont].question.title</strong></p>
                                <br />
                                <p><strong>@Html.Raw(Model.multipleOptionQuestions[cont].question.content)</strong></p>
                                <br />
                                @for (int cont2 = 0; cont2 < Model.multipleOptionQuestions[cont].answers.Count; cont2++)
                                {
                                    @Html.HiddenFor(model => Model.multipleOptionQuestions[cont].answers[cont2].mosa_id)
                                    @Html.HiddenFor(model => Model.multipleOptionQuestions[cont].answers[cont2].mosq_id)
                                    <div class="fecha">
                                        @Html.RadioButtonFor(model => Model.multipleOptionQuestions[cont].userAnswerId, Model.multipleOptionQuestions[cont].answers[cont2].mosa_id, htmlAttributes: new { @class = "col-md-1" })
                                        <strong>@Html.Raw(Model.multipleOptionQuestions[cont].answers[cont2].content)</strong>
                                    </div>
                                }
                                <hr style="border:1px solid #ff0000;" />
                                <br />
                            </div>
                        </div>
                    </div>
                }
            }
            <br /><br />
            @if (Model.multipleOptionQuestions.Count > 0)
            {
                for (int cont = 0; cont < Model.userAnswerTrueFalse.Count; cont++)
                {
                    <div class="panel panel-primary">
                        <div class="panel-heading panel-head"><h1 style="font-size:35px;">Pregunta Verdadero Falso</h1> </div>
                        <div class="panel-body">
                            @Html.HiddenFor(model => model.userAnswerTrueFalse[cont].question.tfsq_id)
                            @Html.HiddenFor(model => model.userAnswerTrueFalse[cont].question.tfsq_id)
                            <div class="comentario">
                                <br />
                                <p><strong>Pregunta: @Model.userAnswerTrueFalse[cont].question.title</strong></p>
                                <br />
                                <p><strong>@Html.Raw(Model.userAnswerTrueFalse[cont].question.content)</strong></p>
                                <br />
                                <div class="fecha">
                                    @Html.RadioButtonFor(model => Model.userAnswerTrueFalse[cont].userAnswerValue, 1, htmlAttributes: new { @class = " control-label col-sm-1" })
                                    <label>Verdadero</label>
                                </div>
                                <br />
                                <br />
                                <div class="fecha">
                                    @Html.RadioButtonFor(model => Model.userAnswerTrueFalse[cont].userAnswerValue, 0, htmlAttributes: new { @class = " control-label col-sm-1" })
                                    <label>Verdadero</label>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
        <button class="btn btn-default">Enviar</button>
    }
}
else if (Model.questionBank.questionsToEvaluate <= 0||(Model.multipleOptionQuestions.Count==0&&Model.trueFalseSurveyQuestions.Count==0))
{
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <div class="message">
        @Html.HiddenFor(model => model.enro_id)
        <h3 style="text-align:center">Este formulario aún no tiene preguntas a evaluar</h3>
        <h4>
            Calificación: @Model.calification
        </h4>
    </div>
}
else
{
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <div class="message">
        @Html.HiddenFor(model => model.enro_id)
        <h3 style="text-align:center">Estimado(a) estudiante @Model.UserLog Usted ya ha realizado el cuestionario o su sesión ya venció</h3>
        <h4>
            Calificación: @Model.calification
        </h4>
    </div>
}
<br />
<br />
<br />
<br />
<br />
